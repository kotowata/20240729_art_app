<% content_for(:title, t('.title')) %>
<div class="my-20 w-5/6 md:w-2/3 mx-auto max-w-screen-xl min-h-screen">
  <div class="flex w-full mb-5 join"> <!-- flexコンテナを追加 -->
    <input id="pac-input" class="controls w-full join-item" type="text" placeholder="エリアを検索">
    <button class="btn bg-blue-500 text-white hover:bg-blue-600 join-item">検索</button> <!-- 検索ボタンを追加 -->
  </div>
  <div id="map" style="height: 500px;"></div>
</div>

<script>
  let map;
  // マーカーを管理する配列
  const markers = [];
  // 地図のオプション（デフォルト位置：東京）
  const defaultMapOptions = {
    center: { lat: 35.6803997, lng: 139.7690174 },
    zoom: 12 // ズームレベル
  };

  // 地図を初期化する関数
  function initMap() {
    // 地図を指定した要素に表示
    map = new google.maps.Map(document.getElementById('map'), defaultMapOptions);

    // 現在地を取得
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        // 現在の緯度経度を取得
        const currentLocation = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        // 地図の中心を現在地に設定
        map.setCenter(currentLocation);
        // マーカーを現在地に表示
        new google.maps.Marker({
          position: currentLocation,
          map: map,
          icon: {
            path: google.maps.SymbolPath.CIRCLE,
            fillColor: 'blue',
            fillOpacity: 1,
            scale: 10, // 丸の大きさ
            strokeColor: 'white', // stroke:マーカーの縁
            strokeWeight: 2
          }
        });

        // 現在地周辺の美術館を検索
        searchNearbyMuseums(currentLocation);
      }, function() {
        // 現在地が取得できない場合デフォルトの地図を表示
        displayMap(defaultMapOptions);
      });
    } else {
      // Geolocation APIが利用不可の場合デフォルトの地図を表示
      displayMap(defaultMapOptions);
    }

    // 地域名で地図を更新する関数
    document.getElementById('pac-input').addEventListener('change', function() {
      const address = this.value;
      const geocoder = new google.maps.Geocoder();
      geocoder.geocode({ address: address }, function(results, status) {
        if (status === 'OK') {
          const location = results[0].geometry.location;
          // 地図の中心を検索結果に設定
          map.setCenter(location);
          // 検索した地域周辺の美術館を検索
          searchNearbyMuseums(location);
        } else {
          alert('地名を見つけられませんでした: ' + status);
        }
      });
    });
  }

  function displayMap(options) {
    map.setCenter(options.center);
    map.setZoom(options.zoom);
  }

  // 美術館を検索する関数
  function searchNearbyMuseums(location) {
    // 直前の検索結果マーカーをクリア
    clearMarkers();

    const service = new google.maps.places.PlacesService(map);
    const request = {
      location: location,
      // 半径10キロメートル以内を検索
      radius: '10000',
      // 検索キーワード
      keyword: '美術展'
    };
    // 美術館を検索
    service.nearbySearch(request, function(results, status) {
      if (status === google.maps.places.PlacesServiceStatus.OK) {
        for (let i = 0; i < results.length; i++) {
          createMarker(results[i]);
        }
      }
    });
  }

  // マーカーを作成する関数
  function createMarker(place) {
    const marker = new google.maps.Marker({
      map: map,
      position: place.geometry.location
    });
    // マーカーを配列に追加
    markers.push(marker);

    // マーカーに情報ウィンドウを追加
    google.maps.event.addListener(marker, 'click', function() {
      const infowindow = new google.maps.InfoWindow();

      // 美術館名
      let content = `<h3>${place.name}</h3>`;
      // GoogleマップのURL
      const googleMapsURL = `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(place.name)}`;
      content += `<p><a href="${googleMapsURL}" target="_blank" style="color: blue; text-decoration: underline;">Googleマップで見る</a></p>`; // Googleマップへのリン

      infowindow.setContent(content);
      infowindow.open(map, marker);
    });
  }

  function clearMarkers() {
    // 既存のマーカーを地図から削除
    for (let i = 0; i < markers.length; i++) {
      markers[i].setMap(null);
    }
    markers.length = 0; // 配列をクリア
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_MAPS_API_KEY"] %>&libraries=places&callback=initMap" async defer></script>